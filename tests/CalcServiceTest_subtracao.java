Aqui está um exemplo de como criar um teste unitário em Java usando JUnit5 para detectar a mutação:\n\n**CalcServiceTest.java**\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\npublic class CalcServiceTest {\n\n    @Test\n    public void testSubtracao_MutationDetected() {\n        // Criar uma instância da classe alvo\n        CalcService calcService = new CalcService();\n\n        // Chamada do método subtracao com parâmetros válidos\n        int result = calcService.subtracao(10, 5);\n\n        // Verificar se o resultado é diferente de 0 (indicando a mutação)\n        assertEquals(-5, result);\n    }\n}\n\n\n**CalcService.java**\n\npublic class CalcService {\n    public int subtracao(int a, int b) {\n        return a - b;\n    }\n}\n\n\nNesse teste, estamos criando uma instância da classe `CalcService` e chamando o método `subtracao` com parâmetros válidos (10 e 5). Em seguida, estamos verificando se o resultado é diferente de 0. Se a mutação estiver presente, o resultado será 0, pois o método `subtracao` foi modificado para sempre retornar 0.\n\nLembre-se de que essa é apenas uma demonstração e não um teste realista. Em um cenário real, você provavelmente deseja testar mais casos e verificar se a mutação está presente em diferentes situações.